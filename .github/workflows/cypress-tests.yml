# ðŸš€ LACOSTE TECHNICAL TEST - PIPELINE CI/CD
# ðŸŽ¯ Objectif : ExÃ©cuter automatiquement tous les tests Cypress
# ðŸ“‹ DÃ©clenchÃ© sur : Push, Pull Request, Schedule quotidien

name: ðŸ§ª Lacoste Technical Test - Cypress Tests

on:
  # DÃ©clencher sur push vers main
  push:
    branches: [ main, master, develop ]
  
  # DÃ©clencher sur Pull Request
  pull_request:
    branches: [ main, master ]
  
  # DÃ©clencher manuellement
  workflow_dispatch:
  
  # DÃ©clencher quotidiennement Ã  8h UTC
  schedule:
    - cron: '0 8 * * *'

jobs:
  # ========================================
  # JOB 1 : EXERCICE 1 - API TESTS
  # ========================================
  exercice1-api-tests:
    name: ðŸ“‹ Exercice 1 - Exchange Rate API Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: ðŸ“¥ Checkout repository
      uses: actions/checkout@v4
    
    - name: ðŸŸ¢ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: ðŸ“¦ Install dependencies
      run: npm ci
    
    - name: ðŸ§ª Run Exercice 1 - API Tests
      run: npx cypress run --spec "cypress/e2e/exercice1-solution.cy.js"
      env:
        CYPRESS_EXCHANGE_API_KEY: ${{ secrets.EXCHANGE_API_KEY || '2dd8e00d22d3af91b792d7c9eb7191ff' }}
    
    - name: ðŸ“Š Upload Cypress Screenshots (if failed)
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: exercice1-cypress-screenshots
        path: cypress/screenshots
        retention-days: 7
    
    - name: ðŸ“¹ Upload Cypress Videos
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: exercice1-cypress-videos
        path: cypress/videos
        retention-days: 7

  # ========================================
  # JOB 2 : EXERCICE 2 - LACOSTE TESTS
  # ========================================
  exercice2-lacoste-tests:
    name: ðŸ“‹ Exercice 2 - Lacoste Website Tests
    runs-on: ubuntu-latest
    
    strategy:
      # Continuer mÃªme si un test Ã©choue
      fail-fast: false
      matrix:
        # Tests en parallÃ¨le
        test-file: [
          "cypress/e2e/exercice2-lacoste-us.cy.js",
          "cypress/e2e/exercice2-lacoste-fr.cy.js"
        ]
    
    steps:
    - name: ðŸ“¥ Checkout repository
      uses: actions/checkout@v4
    
    - name: ðŸŸ¢ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: ðŸ“¦ Install dependencies
      run: npm ci
    
    - name: ðŸ§ª Run Exercice 2 Tests - ${{ matrix.test-file }}
      run: npx cypress run --spec "${{ matrix.test-file }}"
      env:
        # Configuration pour Ã©viter les dÃ©tections de bot
        CYPRESS_userAgent: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36'
    
    - name: ðŸ“Š Upload Cypress Screenshots (if failed)
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: exercice2-cypress-screenshots-${{ strategy.job-index }}
        path: cypress/screenshots
        retention-days: 7
    
    - name: ðŸ“¹ Upload Cypress Videos
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: exercice2-cypress-videos-${{ strategy.job-index }}
        path: cypress/videos
        retention-days: 7

  # ========================================
  # JOB 3 : TESTS COMPLETS (TOUS ENSEMBLE)
  # ========================================
  all-tests:
    name: ðŸŽ¯ All Tests - Complete Suite
    runs-on: ubuntu-latest
    
    steps:
    - name: ðŸ“¥ Checkout repository
      uses: actions/checkout@v4
    
    - name: ðŸŸ¢ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: ðŸ“¦ Install dependencies
      run: npm ci
    
    - name: ðŸ§ª Run All Cypress Tests
      run: npx cypress run
      env:
        CYPRESS_EXCHANGE_API_KEY: ${{ secrets.EXCHANGE_API_KEY || '2dd8e00d22d3af91b792d7c9eb7191ff' }}
        CYPRESS_userAgent: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36'
    
    - name: ðŸ“Š Upload All Cypress Screenshots (if failed)
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: all-tests-cypress-screenshots
        path: cypress/screenshots
        retention-days: 7
    
    - name: ðŸ“¹ Upload All Cypress Videos
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: all-tests-cypress-videos
        path: cypress/videos
        retention-days: 7

  # ========================================
  # JOB 4 : RAPPORT FINAL
  # ========================================
  test-report:
    name: ðŸ“Š Generate Test Report
    runs-on: ubuntu-latest
    needs: [exercice1-api-tests, exercice2-lacoste-tests, all-tests]
    if: always()
    
    steps:
    - name: ðŸ“¥ Checkout repository
      uses: actions/checkout@v4
    
    - name: ðŸ“Š Generate Test Summary
      run: |
        echo "# ðŸŽ¯ Lacoste Technical Test - Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## ðŸ“‹ Exercice 1 - Exchange Rate API Tests" >> $GITHUB_STEP_SUMMARY
        echo "Status: ${{ needs.exercice1-api-tests.result }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## ðŸ“‹ Exercice 2 - Lacoste Website Tests" >> $GITHUB_STEP_SUMMARY
        echo "Status: ${{ needs.exercice2-lacoste-tests.result }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## ðŸŽ¯ Complete Test Suite" >> $GITHUB_STEP_SUMMARY
        echo "Status: ${{ needs.all-tests.result }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## ðŸ“… Execution Info" >> $GITHUB_STEP_SUMMARY
        echo "- **Date**: $(date)" >> $GITHUB_STEP_SUMMARY
        echo "- **Trigger**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "âœ… Pipeline execution completed!" >> $GITHUB_STEP_SUMMARY